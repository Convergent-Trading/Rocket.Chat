{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:retention-policy/server/startup/settings.js","meteor://ðŸ’»app/packages/rocketchat:retention-policy/server/cronPruneMessages.js"],"names":["RocketChat","settings","addGroup","add","type","public","i18nLabel","alert","values","key","i18nDescription","enableQuery","_id","value","section","globalQuery","types","oldest","Date","lastPrune","maxTimes","c","p","d","toDays","gracePeriod","job","now","filesOnly","get","excludePinned","forEach","maxAge","latest","getTime","models","Rooms","find","t","_updatedAt","$gte","$or","$eq","$exists","$ne","rid","cleanRoomHistory","room","retention","getSchedule","precision","pruneCronName","deployCron","schedule","parser","cron","SyncedCron","remove","name","reloadPolicy","push","Meteor","startup","defer","Settings","$in","observe","changed"],"mappings":"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","file":"/packages/rocketchat_retention-policy.js","sourcesContent":["RocketChat.settings.addGroup('RetentionPolicy', function() {\n\n\tthis.add('RetentionPolicy_Enabled', false, {\n\t\ttype: 'boolean',\n\t\tpublic: true,\n\t\ti18nLabel: 'RetentionPolicy_Enabled',\n\t\talert: 'Watch out! Tweaking these settings without utmost care can destroy all message history. Please read the documentation before turning the feature on at rocket.chat/docs/administrator-guides/retention-policies/',\n\t});\n\n\tthis.add('RetentionPolicy_Precision', '0', {\n\t\ttype: 'select',\n\t\tvalues: [\n\t\t\t{\n\t\t\t\tkey: '0',\n\t\t\t\ti18nLabel: 'every_30_minutes',\n\t\t\t}, {\n\t\t\t\tkey: '1',\n\t\t\t\ti18nLabel: 'every_hour',\n\t\t\t}, {\n\t\t\t\tkey: '2',\n\t\t\t\ti18nLabel: 'every_six_hours',\n\t\t\t}, {\n\t\t\t\tkey: '3',\n\t\t\t\ti18nLabel: 'every_day',\n\t\t\t},\n\t\t],\n\t\tpublic: true,\n\t\ti18nLabel: 'RetentionPolicy_Precision',\n\t\ti18nDescription: 'RetentionPolicy_Precision_Description',\n\t\tenableQuery: {\n\t\t\t_id: 'RetentionPolicy_Enabled',\n\t\t\tvalue: true,\n\t\t},\n\t});\n\n\tthis.section('Global Policy', function() {\n\t\tconst globalQuery = {\n\t\t\t_id: 'RetentionPolicy_Enabled',\n\t\t\tvalue: true,\n\t\t};\n\n\t\tthis.add('RetentionPolicy_AppliesToChannels', false, {\n\t\t\ttype: 'boolean',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_AppliesToChannels',\n\t\t\tenableQuery: globalQuery,\n\t\t});\n\t\tthis.add('RetentionPolicy_MaxAge_Channels', 30, {\n\t\t\ttype: 'int',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_MaxAge_Channels',\n\t\t\ti18nDescription: 'RetentionPolicy_MaxAge_Description',\n\t\t\tenableQuery: [{\n\t\t\t\t_id: 'RetentionPolicy_AppliesToChannels',\n\t\t\t\tvalue: true,\n\t\t\t}, globalQuery],\n\t\t});\n\n\t\tthis.add('RetentionPolicy_AppliesToGroups', false, {\n\t\t\ttype: 'boolean',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_AppliesToGroups',\n\t\t\tenableQuery: globalQuery,\n\t\t});\n\t\tthis.add('RetentionPolicy_MaxAge_Groups', 30, {\n\t\t\ttype: 'int',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_MaxAge_Groups',\n\t\t\ti18nDescription: 'RetentionPolicy_MaxAge_Description',\n\t\t\tenableQuery: [{\n\t\t\t\t_id: 'RetentionPolicy_AppliesToGroups',\n\t\t\t\tvalue: true,\n\t\t\t}, globalQuery],\n\t\t});\n\n\t\tthis.add('RetentionPolicy_AppliesToDMs', false, {\n\t\t\ttype: 'boolean',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_AppliesToDMs',\n\t\t\tenableQuery: globalQuery,\n\t\t});\n\t\tthis.add('RetentionPolicy_MaxAge_DMs', 30, {\n\t\t\ttype: 'int',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_MaxAge_DMs',\n\t\t\ti18nDescription: 'RetentionPolicy_MaxAge_Description',\n\t\t\tenableQuery: [{\n\t\t\t\t_id: 'RetentionPolicy_AppliesToDMs',\n\t\t\t\tvalue: true,\n\t\t\t}, globalQuery],\n\t\t});\n\n\t\tthis.add('RetentionPolicy_ExcludePinned', false, {\n\t\t\ttype: 'boolean',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_ExcludePinned',\n\t\t\tenableQuery: globalQuery,\n\t\t});\n\t\tthis.add('RetentionPolicy_FilesOnly', false, {\n\t\t\ttype: 'boolean',\n\t\t\tpublic: true,\n\t\t\ti18nLabel: 'RetentionPolicy_FilesOnly',\n\t\t\ti18nDescription: 'RetentionPolicy_FilesOnly_Description',\n\t\t\tenableQuery: globalQuery,\n\t\t});\n\t});\n});\n","/* globals SyncedCron */\n\nlet types = [];\n\nconst oldest = new Date('0001-01-01T00:00:00Z');\n\nlet lastPrune = oldest;\n\nconst maxTimes = {\n\tc: 0,\n\tp: 0,\n\td: 0,\n};\nconst toDays = 1000 * 60 * 60 * 24;\nconst gracePeriod = 5000;\nfunction job() {\n\tconst now = new Date();\n\tconst filesOnly = RocketChat.settings.get('RetentionPolicy_FilesOnly');\n\tconst excludePinned = RocketChat.settings.get('RetentionPolicy_ExcludePinned');\n\n\t// get all rooms with default values\n\ttypes.forEach((type) => {\n\t\tconst maxAge = maxTimes[type] || 0;\n\t\tconst latest = new Date(now.getTime() - maxAge * toDays);\n\n\t\tRocketChat.models.Rooms.find({\n\t\t\tt: type,\n\t\t\t_updatedAt: { $gte: lastPrune },\n\t\t\t$or: [{ 'retention.enabled': { $eq: true } }, { 'retention.enabled': { $exists: false } }],\n\t\t\t'retention.overrideGlobal': { $ne: true },\n\t\t}).forEach(({ _id: rid }) => {\n\t\t\tRocketChat.cleanRoomHistory({ rid, latest, oldest, filesOnly, excludePinned });\n\t\t});\n\t});\n\n\tRocketChat.models.Rooms.find({\n\t\t'retention.enabled': { $eq: true },\n\t\t'retention.overrideGlobal': { $eq: true },\n\t\t'retention.maxAge': { $gte: 0 },\n\t\t_updatedAt: { $gte: lastPrune },\n\t}).forEach((room) => {\n\t\tconst { maxAge = 30, filesOnly, excludePinned } = room.retention;\n\t\tconst latest = new Date(now.getTime() - maxAge * toDays);\n\t\tRocketChat.cleanRoomHistory({ rid: room._id, latest, oldest, filesOnly, excludePinned });\n\t});\n\tlastPrune = new Date(now.getTime() - gracePeriod);\n}\n\nfunction getSchedule(precision) {\n\tswitch (precision) {\n\t\tcase '0':\n\t\t\treturn '0 */30 * * * *';\n\t\tcase '1':\n\t\t\treturn '0 0 * * * *';\n\t\tcase '2':\n\t\t\treturn '0 0 */6 * * *';\n\t\tcase '3':\n\t\t\treturn '0 0 0 * * *';\n\t}\n}\n\nconst pruneCronName = 'Prune old messages by retention policy';\n\nfunction deployCron(precision) {\n\tconst schedule = (parser) => parser.cron(getSchedule(precision), true);\n\n\tSyncedCron.remove(pruneCronName);\n\tSyncedCron.add({\n\t\tname: pruneCronName,\n\t\tschedule,\n\t\tjob,\n\t});\n}\n\nfunction reloadPolicy() {\n\ttypes = [];\n\n\tif (RocketChat.settings.get('RetentionPolicy_Enabled')) {\n\t\tif (RocketChat.settings.get('RetentionPolicy_AppliesToChannels')) {\n\t\t\ttypes.push('c');\n\t\t}\n\n\t\tif (RocketChat.settings.get('RetentionPolicy_AppliesToGroups')) {\n\t\t\ttypes.push('p');\n\t\t}\n\n\t\tif (RocketChat.settings.get('RetentionPolicy_AppliesToDMs')) {\n\t\t\ttypes.push('d');\n\t\t}\n\n\t\tmaxTimes.c = RocketChat.settings.get('RetentionPolicy_MaxAge_Channels');\n\t\tmaxTimes.p = RocketChat.settings.get('RetentionPolicy_MaxAge_Groups');\n\t\tmaxTimes.d = RocketChat.settings.get('RetentionPolicy_MaxAge_DMs');\n\n\t\treturn deployCron(RocketChat.settings.get('RetentionPolicy_Precision'));\n\t}\n\treturn SyncedCron.remove(pruneCronName);\n}\n\nMeteor.startup(function() {\n\tMeteor.defer(function() {\n\t\tRocketChat.models.Settings.find({\n\t\t\t_id: {\n\t\t\t\t$in: [\n\t\t\t\t\t'RetentionPolicy_Enabled',\n\t\t\t\t\t'RetentionPolicy_Precision',\n\t\t\t\t\t'RetentionPolicy_AppliesToChannels',\n\t\t\t\t\t'RetentionPolicy_AppliesToGroups',\n\t\t\t\t\t'RetentionPolicy_AppliesToDMs',\n\t\t\t\t\t'RetentionPolicy_MaxAge_Channels',\n\t\t\t\t\t'RetentionPolicy_MaxAge_Groups',\n\t\t\t\t\t'RetentionPolicy_MaxAge_DMs',\n\t\t\t\t],\n\t\t\t},\n\t\t}).observe({\n\t\t\tchanged() {\n\t\t\t\treloadPolicy();\n\t\t\t},\n\t\t});\n\n\t\treloadPolicy();\n\t});\n});\n"]}