{"version":3,"sources":["meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_server.js","meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_utils.js","meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_rocketchat.js"],"names":["_","module","watch","require","default","v","fiber","connect","Accounts","saml","settings","debug","generateUsername","providers","RoutePolicy","declare","getSamlProviderConfig","provider","Meteor","Error","method","samlProvider","element","filter","methods","samlLogout","userId","providerConfig","console","log","JSON","stringify","user","users","findOne","_id","nameID","services","sessionIndex","idpSession","_saml","SAML","request","generateLogoutRequest","update","$set","id","_syncRequestToUrl","wrapAsync","requestToUrl","result","registerLoginHandler","loginRequest","credentialToken","undefined","loginResult","retrieveCredential","type","error","LoginCancelledError","numericError","profile","email","emailList","Array","isArray","emailRegex","RegExp","map","escape","join","newUser","name","cn","username","active","globalRoles","emails","address","verified","RocketChat","generateUsernameSuggestion","insertUserDoc","stampedToken","_generateStampedLoginToken","$push","samlLogin","RelayState","idp","issuer","token","hasCredential","models","CredentialTokens","findOneById","data","userInfo","storeCredential","create","closePopup","res","err","writeHead","content","end","samlUrlToObject","url","splitUrl","split","splitPath","actionName","serviceName","middleware","req","next","samlObject","service","find","samlSetting","callbackUrl","absoluteUrl","write","generateServiceProviderMetadata","validateLogoutResponse","query","SAMLResponse","logOutUser","inResponseTo","loggedOutUser","fetch","length","$unset","run","Location","redirect","getAuthorizeUrl","body","validateResponse","inResponseToId","value","InResponseTo","saml_idp_credentialToken","Random","WebApp","connectHandlers","use","bodyParser","zlib","xmlCrypto","crypto","xmldom","querystring","xmlbuilder","array2string","options","initialize","debugLog","args","apply","prototype","protocol","path","identifierFormat","authnContext","generateUniqueID","chars","uniqueID","i","substr","Math","floor","random","generateInstant","Date","toISOString","signRequest","xml","signer","createSign","sign","privateKey","generateAuthorizeRequest","instant","headers","host","entryPoint","idpSLORedirectURL","operation","callback","self","deflateRaw","buffer","base64","toString","target","indexOf","relayState","samlRequest","SAMLRequest","privateCert","SigAlg","Signature","getLogoutUrl","certToPEM","cert","match","validateStatus","doc","successStatus","status","messageText","statusNodes","getElementsByTagNameNS","statusNode","statusMessage","firstChild","textContent","getAttribute","success","message","statusCode","validateSignature","DOMParser","parseFromString","signature","xpath","sig","SignedXml","keyInfoProvider","getKeyInfo","getKey","loadSignature","checkSignature","samlResponse","compressedSAMLResponse","Buffer","inflateRaw","decoded","Object","call","response","e","msg","statusValidateObj","mapAttributes","attributeStatement","attributes","values","j","push","key","mail","assertion","hasAttribute","subject","nameIDFormat","authnStatement","profileKeys","keys","replace","logoutResponse","decryptionCert","metadata","EntityDescriptor","SPSSODescriptor","SingleLogoutService","NameIDFormat","AssertionConsumerService","KeyDescriptor","EncryptionMethod","pretty","indent","newline","export","updateServices","configureSamlService","getSamlConfigs","debounce","logger","Logger","updated","addGroup","addSamlService","add","group","section","i18nLabel","multiline","buttonLabelText","get","buttonLabelColor","buttonColor","clientConfig","logoutBehaviour","secret","publicCert","fn","delay","timer","clearTimeout","setTimeout","samlConfigs","ServiceConfiguration","configurations","upsert","toLowerCase","remove","startup"],"mappings":"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","file":"/packages/steffo_meteor-accounts-saml.js","sourcesContent":["/* globals RoutePolicy, SAML */\n/* jshint newcap: false */\nimport _ from 'underscore';\n\nif (!Accounts.saml) {\n\tAccounts.saml = {\n\t\tsettings: {\n\t\t\tdebug: false,\n\t\t\tgenerateUsername: false,\n\t\t\tproviders: [],\n\t\t},\n\t};\n}\n\nimport fiber from 'fibers';\nimport connect from 'connect';\nRoutePolicy.declare('/_saml/', 'network');\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlProviderConfig(provider) {\n\tif (! provider) {\n\t\tthrow new Meteor.Error('no-saml-provider',\n\t\t\t'SAML internal error',\n\t\t\t{ method: 'getSamlProviderConfig' });\n\t}\n\tconst samlProvider = function(element) {\n\t\treturn (element.provider === provider);\n\t};\n\treturn Accounts.saml.settings.providers.filter(samlProvider)[0];\n}\n\nMeteor.methods({\n\tsamlLogout(provider) {\n\t\t// Make sure the user is logged in before initiate SAML SLO\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tconst providerConfig = getSamlProviderConfig(provider);\n\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`Logout request from ${ JSON.stringify(providerConfig) }`);\n\t\t}\n\t\t// This query should respect upcoming array of SAML logins\n\t\tconst user = Meteor.users.findOne({\n\t\t\t_id: Meteor.userId(),\n\t\t\t'services.saml.provider': provider,\n\t\t}, {\n\t\t\t'services.saml': 1,\n\t\t});\n\t\tlet { nameID } = user.services.saml;\n\t\tconst sessionIndex = user.services.saml.idpSession;\n\t\tnameID = sessionIndex;\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`NameID for user ${ Meteor.userId() } found: ${ JSON.stringify(nameID) }`);\n\t\t}\n\n\t\tconst _saml = new SAML(providerConfig);\n\n\t\tconst request = _saml.generateLogoutRequest({\n\t\t\tnameID,\n\t\t\tsessionIndex,\n\t\t});\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tMeteor.users.update({\n\t\t\t_id: Meteor.userId(),\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t'services.saml.inResponseTo': request.id,\n\t\t\t},\n\t\t});\n\n\t\tconst _syncRequestToUrl = Meteor.wrapAsync(_saml.requestToUrl, _saml);\n\t\tconst result = _syncRequestToUrl(request.request, 'logout');\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(`SAML Logout Request ${ result }`);\n\t\t}\n\n\n\t\treturn result;\n\t},\n});\n\nAccounts.registerLoginHandler(function(loginRequest) {\n\tif (!loginRequest.saml || !loginRequest.credentialToken) {\n\t\treturn undefined;\n\t}\n\n\tconst loginResult = Accounts.saml.retrieveCredential(loginRequest.credentialToken);\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log(`RESULT :${ JSON.stringify(loginResult) }`);\n\t}\n\n\tif (loginResult === undefined) {\n\t\treturn {\n\t\t\ttype: 'saml',\n\t\t\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'No matching login attempt found'),\n\t\t};\n\t}\n\n\tif (loginResult && loginResult.profile && loginResult.profile.email) {\n\t\tconst emailList = Array.isArray(loginResult.profile.email) ? loginResult.profile.email : [loginResult.profile.email];\n\t\tconst emailRegex = new RegExp(emailList.map((email) => `^${ RegExp.escape(email) }$`).join('|'), 'i');\n\t\tlet user = Meteor.users.findOne({\n\t\t\t'emails.address': emailRegex,\n\t\t});\n\n\t\tif (!user) {\n\t\t\tconst newUser = {\n\t\t\t\tname: loginResult.profile.cn || loginResult.profile.username,\n\t\t\t\tactive: true,\n\t\t\t\tglobalRoles: ['user'],\n\t\t\t\temails: emailList.map((email) => ({\n\t\t\t\t\taddress: email,\n\t\t\t\t\tverified: true,\n\t\t\t\t})),\n\t\t\t};\n\n\t\t\tif (Accounts.saml.settings.generateUsername === true) {\n\t\t\t\tconst username = RocketChat.generateUsernameSuggestion(newUser);\n\t\t\t\tif (username) {\n\t\t\t\t\tnewUser.username = username;\n\t\t\t\t}\n\t\t\t} else if (loginResult.profile.username) {\n\t\t\t\tnewUser.username = loginResult.profile.username;\n\t\t\t}\n\n\t\t\tconst userId = Accounts.insertUserDoc({}, newUser);\n\t\t\tuser = Meteor.users.findOne(userId);\n\t\t}\n\n\t\t// creating the token and adding to the user\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\t\tMeteor.users.update(user, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': stampedToken,\n\t\t\t},\n\t\t});\n\n\t\tconst samlLogin = {\n\t\t\tprovider: Accounts.saml.RelayState,\n\t\t\tidp: loginResult.profile.issuer,\n\t\t\tidpSession: loginResult.profile.sessionIndex,\n\t\t\tnameID: loginResult.profile.nameID,\n\t\t};\n\n\t\tMeteor.users.update({\n\t\t\t_id: user._id,\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t// TBD this should be pushed, otherwise we're only able to SSO into a single IDP at a time\n\t\t\t\t'services.saml': samlLogin,\n\t\t\t},\n\t\t});\n\n\t\t// sending token along with the userId\n\t\tconst result = {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token,\n\t\t};\n\n\t\treturn result;\n\n\t} else {\n\t\tthrow new Error('SAML Profile did not contain an email address');\n\t}\n});\n\nAccounts.saml.hasCredential = function(credentialToken) {\n\treturn RocketChat.models.CredentialTokens.findOneById(credentialToken) != null;\n};\n\nAccounts.saml.retrieveCredential = function(credentialToken) {\n\t// The credentialToken in all these functions corresponds to SAMLs inResponseTo field and is mandatory to check.\n\tconst data = RocketChat.models.CredentialTokens.findOneById(credentialToken);\n\tif (data) {\n\t\treturn data.userInfo;\n\t}\n};\n\nAccounts.saml.storeCredential = function(credentialToken, loginResult) {\n\tRocketChat.models.CredentialTokens.create(credentialToken, loginResult);\n};\n\nconst closePopup = function(res, err) {\n\tres.writeHead(200, {\n\t\t'Content-Type': 'text/html',\n\t});\n\tlet content = '<html><head><script>window.close()</script></head><body><H1>Verified</H1></body></html>';\n\tif (err) {\n\t\tcontent = `<html><body><h2>Sorry, an annoying error occured</h2><div>${ err }</div><a onclick=\"window.close();\">Close Window</a></body></html>`;\n\t}\n\tres.end(content, 'utf-8');\n};\n\nconst samlUrlToObject = function(url) {\n\t// req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tconst splitUrl = url.split('?');\n\tconst splitPath = splitUrl[0].split('/');\n\n\t// Any non-saml request will continue down the default\n\t// middlewares.\n\tif (splitPath[1] !== '_saml') {\n\t\treturn null;\n\t}\n\n\tconst result = {\n\t\tactionName: splitPath[2],\n\t\tserviceName: splitPath[3],\n\t\tcredentialToken: splitPath[4],\n\t};\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log(result);\n\t}\n\treturn result;\n};\n\nconst middleware = function(req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst samlObject = samlUrlToObject(req.url);\n\t\tif (!samlObject || !samlObject.serviceName) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!samlObject.actionName) {\n\t\t\tthrow new Error('Missing SAML action');\n\t\t}\n\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log(Accounts.saml.settings.providers);\n\t\t\tconsole.log(samlObject.serviceName);\n\t\t}\n\t\tconst service = _.find(Accounts.saml.settings.providers, function(samlSetting) {\n\t\t\treturn samlSetting.provider === samlObject.serviceName;\n\t\t});\n\n\t\t// Skip everything if there's no service set by the saml middleware\n\t\tif (!service) {\n\t\t\tthrow new Error(`Unexpected SAML service ${ samlObject.serviceName }`);\n\t\t}\n\t\tlet _saml;\n\t\tswitch (samlObject.actionName) {\n\t\t\tcase 'metadata':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl(`_saml/validate/${ service.provider }`);\n\t\t\t\tres.writeHead(200);\n\t\t\t\tres.write(_saml.generateServiceProviderMetadata(service.callbackUrl));\n\t\t\t\tres.end();\n\t\t\t\t// closePopup(res);\n\t\t\t\tbreak;\n\t\t\tcase 'logout':\n\t\t\t\t// This is where we receive SAML LogoutResponse\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.validateLogoutResponse(req.query.SAMLResponse, function(err, result) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tconst logOutUser = function(inResponseTo) {\n\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\tconsole.log(`Logging Out user via inResponseTo ${ inResponseTo }`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst loggedOutUser = Meteor.users.find({\n\t\t\t\t\t\t\t\t'services.saml.inResponseTo': inResponseTo,\n\t\t\t\t\t\t\t}).fetch();\n\t\t\t\t\t\t\tif (loggedOutUser.length === 1) {\n\t\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log(`Found user ${ loggedOutUser[0]._id }`);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id,\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens': [],\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id,\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\t\t\t'services.saml': '',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('Found multiple users matching SAML inResponseTo fields');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfiber(function() {\n\t\t\t\t\t\t\tlogOutUser(result);\n\t\t\t\t\t\t}).run();\n\n\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\tLocation: req.query.RelayState,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t}\n\t\t\t\t\t//  else {\n\t\t\t\t\t// \t// TBD thinking of sth meaning full.\n\t\t\t\t\t// }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'sloRedirect':\n\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t// credentialToken here is the SAML LogOut Request that we'll send back to IDP\n\t\t\t\t\tLocation: req.query.redirect,\n\t\t\t\t});\n\t\t\t\tres.end();\n\t\t\t\tbreak;\n\t\t\tcase 'authorize':\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl(`_saml/validate/${ service.provider }`);\n\t\t\t\tservice.id = samlObject.credentialToken;\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.getAuthorizeUrl(req, function(err, url) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error('Unable to generate authorize url');\n\t\t\t\t\t}\n\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\tLocation: url,\n\t\t\t\t\t});\n\t\t\t\t\tres.end();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'validate':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tAccounts.saml.RelayState = req.body.RelayState;\n\t\t\t\t_saml.validateResponse(req.body.SAMLResponse, req.body.RelayState, function(err, profile/* , loggedOut*/) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error(`Unable to validate response url: ${ err }`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst credentialToken = (profile.inResponseToId && profile.inResponseToId.value) || profile.inResponseToId || profile.InResponseTo || samlObject.credentialToken;\n\t\t\t\t\tconst loginResult = {\n\t\t\t\t\t\tprofile,\n\t\t\t\t\t};\n\t\t\t\t\tif (!credentialToken) {\n\t\t\t\t\t\t// No credentialToken in IdP-initiated SSO\n\t\t\t\t\t\tconst saml_idp_credentialToken = Random.id();\n\t\t\t\t\t\tAccounts.saml.storeCredential(saml_idp_credentialToken, loginResult);\n\n\t\t\t\t\t\tconst url = `${ Meteor.absoluteUrl('home') }?saml_idp_credentialToken=${ saml_idp_credentialToken }`;\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\tLocation: url,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAccounts.saml.storeCredential(credentialToken, loginResult);\n\t\t\t\t\t\tclosePopup(res);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Unexpected SAML action ${ samlObject.actionName }`);\n\n\t\t}\n\t} catch (err) {\n\t\tclosePopup(res, err);\n\t}\n};\n\n// Listen to incoming SAML http requests\nWebApp.connectHandlers.use(connect.bodyParser()).use(function(req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function() {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n","/* globals SAML:true */\n\nimport zlib from 'zlib';\nimport xmlCrypto from 'xml-crypto';\nimport crypto from 'crypto';\nimport xmldom from 'xmldom';\nimport querystring from 'querystring';\nimport xmlbuilder from 'xmlbuilder';\nimport array2string from 'arraybuffer-to-string';\n\n// var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n\nSAML = function(options) {\n\tthis.options = this.initialize(options);\n};\n\nfunction debugLog(...args) {\n\tif (Meteor.settings.debug) {\n\t\tconsole.log.apply(this, args);\n\t}\n}\n\n// var stripPrefix = function(str) {\n// \treturn str.replace(prefixMatch, '');\n// };\n\nSAML.prototype.initialize = function(options) {\n\tif (!options) {\n\t\toptions = {};\n\t}\n\n\tif (!options.protocol) {\n\t\toptions.protocol = 'https://';\n\t}\n\n\tif (!options.path) {\n\t\toptions.path = '/saml/consume';\n\t}\n\n\tif (!options.issuer) {\n\t\toptions.issuer = 'onelogin_saml';\n\t}\n\n\tif (options.identifierFormat === undefined) {\n\t\toptions.identifierFormat = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress';\n\t}\n\n\tif (options.authnContext === undefined) {\n\t\toptions.authnContext = 'urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport';\n\t}\n\n\treturn options;\n};\n\nSAML.prototype.generateUniqueID = function() {\n\tconst chars = 'abcdef0123456789';\n\tlet uniqueID = 'id-';\n\tfor (let i = 0; i < 20; i++) {\n\t\tuniqueID += chars.substr(Math.floor((Math.random() * 15)), 1);\n\t}\n\treturn uniqueID;\n};\n\nSAML.prototype.generateInstant = function() {\n\treturn new Date().toISOString();\n};\n\nSAML.prototype.signRequest = function(xml) {\n\tconst signer = crypto.createSign('RSA-SHA1');\n\tsigner.update(xml);\n\treturn signer.sign(this.options.privateKey, 'base64');\n};\n\nSAML.prototype.generateAuthorizeRequest = function(req) {\n\tlet id = `_${ this.generateUniqueID() }`;\n\tconst instant = this.generateInstant();\n\n\t// Post-auth destination\n\tlet callbackUrl;\n\tif (this.options.callbackUrl) {\n\t\tcallbackUrl = this.options.callbackUrl;\n\t} else {\n\t\tcallbackUrl = this.options.protocol + req.headers.host + this.options.path;\n\t}\n\n\tif (this.options.id) {\n\t\tid = this.options.id;\n\t}\n\n\tlet request =\n\t\t`<samlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\"${ id }\" Version=\"2.0\" IssueInstant=\"${ instant }\" ProtocolBinding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" AssertionConsumerServiceURL=\"${ callbackUrl }\" Destination=\"${\n\t\t\tthis.options.entryPoint }\">` +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>\\n`;\n\n\tif (this.options.identifierFormat) {\n\t\trequest += `<samlp:NameIDPolicy xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Format=\"${ this.options.identifierFormat }\" AllowCreate=\"true\"></samlp:NameIDPolicy>\\n`;\n\t}\n\n\trequest +=\n\t\t'<samlp:RequestedAuthnContext xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Comparison=\"exact\">' +\n\t\t'<saml:AuthnContextClassRef xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml:AuthnContextClassRef></samlp:RequestedAuthnContext>\\n' +\n\t\t'</samlp:AuthnRequest>';\n\n\treturn request;\n};\n\nSAML.prototype.generateLogoutRequest = function(options) {\n\t// options should be of the form\n\t// nameId: <nameId as submitted during SAML SSO>\n\t// sessionIndex: sessionIndex\n\t// --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n\n\tconst id = `_${ this.generateUniqueID() }`;\n\tconst instant = this.generateInstant();\n\n\tlet request = `${ '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ' +\n\t\t'xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"' }${ id }\" Version=\"2.0\" IssueInstant=\"${ instant }\" Destination=\"${ this.options.idpSLORedirectURL }\">` +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>` +\n\t\t`<saml:NameID Format=\"${ this.options.identifierFormat }\">${ options.nameID }</saml:NameID>` +\n\t\t'</samlp:LogoutRequest>';\n\n\trequest = `${ '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"  ' +\n\t\t'ID=\"' }${ id }\" ` +\n\t\t'Version=\"2.0\" ' +\n\t\t`IssueInstant=\"${ instant }\" ` +\n\t\t`Destination=\"${ this.options.idpSLORedirectURL }\" ` +\n\t\t'>' +\n\t\t`<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">${ this.options.issuer }</saml:Issuer>` +\n\t\t'<saml:NameID xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ' +\n\t\t'NameQualifier=\"http://id.init8.net:8080/openam\" ' +\n\t\t`SPNameQualifier=\"${ this.options.issuer }\" ` +\n\t\t`Format=\"${ this.options.identifierFormat }\">${\n\t\t\toptions.nameID }</saml:NameID>` +\n\t\t`<samlp:SessionIndex xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\">${ options.sessionIndex }</samlp:SessionIndex>` +\n\t\t'</samlp:LogoutRequest>';\n\n\tdebugLog('------- SAML Logout request -----------');\n\tdebugLog(request);\n\n\treturn {\n\t\trequest,\n\t\tid,\n\t};\n};\n\nSAML.prototype.requestToUrl = function(request, operation, callback) {\n\tconst self = this;\n\tzlib.deflateRaw(request, function(err, buffer) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tconst base64 = buffer.toString('base64');\n\t\tlet target = self.options.entryPoint;\n\n\t\tif (operation === 'logout') {\n\t\t\tif (self.options.idpSLORedirectURL) {\n\t\t\t\ttarget = self.options.idpSLORedirectURL;\n\t\t\t}\n\t\t}\n\n\t\tif (target.indexOf('?') > 0) {\n\t\t\ttarget += '&';\n\t\t} else {\n\t\t\ttarget += '?';\n\t\t}\n\n\t\t// TBD. We should really include a proper RelayState here\n\t\tlet relayState;\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\trelayState = Meteor.absoluteUrl();\n\t\t} else {\n\t\t\trelayState = self.options.provider;\n\t\t}\n\n\t\tconst samlRequest = {\n\t\t\tSAMLRequest: base64,\n\t\t\tRelayState: relayState,\n\t\t};\n\n\t\tif (self.options.privateCert) {\n\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\tsamlRequest.Signature = self.signRequest(querystring.stringify(samlRequest));\n\t\t}\n\n\t\ttarget += querystring.stringify(samlRequest);\n\n\t\tdebugLog(`requestToUrl: ${ target }`);\n\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\treturn callback(null, target);\n\n\t\t} else {\n\t\t\tcallback(null, target);\n\t\t}\n\t});\n};\n\nSAML.prototype.getAuthorizeUrl = function(req, callback) {\n\tconst request = this.generateAuthorizeRequest(req);\n\n\tthis.requestToUrl(request, 'authorize', callback);\n};\n\nSAML.prototype.getLogoutUrl = function(req, callback) {\n\tconst request = this.generateLogoutRequest(req);\n\n\tthis.requestToUrl(request, 'logout', callback);\n};\n\nSAML.prototype.certToPEM = function(cert) {\n\tcert = cert.match(/.{1,64}/g).join('\\n');\n\tcert = `-----BEGIN CERTIFICATE-----\\n${ cert }`;\n\tcert = `${ cert }\\n-----END CERTIFICATE-----\\n`;\n\treturn cert;\n};\n\n// functionfindChilds(node, localName, namespace) {\n// \tvar res = [];\n// \tfor (var i = 0; i < node.childNodes.length; i++) {\n// \t\tvar child = node.childNodes[i];\n// \t\tif (child.localName === localName && (child.namespaceURI === namespace || !namespace)) {\n// \t\t\tres.push(child);\n// \t\t}\n// \t}\n// \treturn res;\n// }\n\nSAML.prototype.validateStatus = function(doc) {\n\tlet successStatus = false;\n\tlet status = '';\n\tlet messageText = '';\n\tconst statusNodes = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusCode');\n\n\tif (statusNodes.length) {\n\n\t\tconst statusNode = statusNodes[0];\n\t\tconst statusMessage = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusMessage')[0];\n\n\t\tif (statusMessage) {\n\t\t\tmessageText = statusMessage.firstChild.textContent;\n\t\t}\n\n\t\tstatus = statusNode.getAttribute('Value');\n\n\t\tif (status === 'urn:oasis:names:tc:SAML:2.0:status:Success') {\n\t\t\tsuccessStatus = true;\n\t\t}\n\t}\n\treturn {\n\t\tsuccess: successStatus,\n\t\tmessage: messageText,\n\t\tstatusCode: status,\n\t};\n};\n\nSAML.prototype.validateSignature = function(xml, cert) {\n\tconst self = this;\n\n\tconst doc = new xmldom.DOMParser().parseFromString(xml);\n\tconst signature = xmlCrypto.xpath(doc, '//*[local-name(.)=\\'Signature\\' and namespace-uri(.)=\\'http://www.w3.org/2000/09/xmldsig#\\']')[0];\n\n\tconst sig = new xmlCrypto.SignedXml();\n\n\tsig.keyInfoProvider = {\n\t\tgetKeyInfo(/* key*/) {\n\t\t\treturn '<X509Data></X509Data>';\n\t\t},\n\t\tgetKey(/* keyInfo*/) {\n\t\t\treturn self.certToPEM(cert);\n\t\t},\n\t};\n\n\tsig.loadSignature(signature);\n\n\treturn sig.checkSignature(xml);\n};\n\nSAML.prototype.validateLogoutResponse = function(samlResponse, callback) {\n\tconst self = this;\n\tconst compressedSAMLResponse = new Buffer(samlResponse, 'base64');\n\tzlib.inflateRaw(compressedSAMLResponse, function(err, decoded) {\n\t\tif (err) {\n\t\t\tdebugLog(`Error while inflating. ${ err }`);\n\t\t} else {\n\t\t\tdebugLog(`constructing new DOM parser: ${ Object.prototype.toString.call(decoded) }`);\n\t\t\tdebugLog(`>>>> ${ decoded }`);\n\t\t\tconst doc = new xmldom.DOMParser().parseFromString(array2string(decoded), 'text/xml');\n\t\t\tif (doc) {\n\t\t\t\tconst response = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse')[0];\n\t\t\t\tif (response) {\n\n\t\t\t\t\t// TBD. Check if this msg corresponds to one we sent\n\t\t\t\t\tlet inResponseTo;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tinResponseTo = response.getAttribute('InResponseTo');\n\t\t\t\t\t\tdebugLog(`In Response to: ${ inResponseTo }`);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\t\tdebugLog(`Caught error: ${ e }`);\n\t\t\t\t\t\t\tconst msg = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'StatusMessage');\n\t\t\t\t\t\t\tdebugLog(`Unexpected msg from IDP. Does your session still exist at IDP? Idp returned: \\n ${ msg }`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst statusValidateObj = self.validateStatus(doc);\n\n\t\t\t\t\tif (statusValidateObj.success) {\n\t\t\t\t\t\tcallback(null, inResponseTo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback('Error. Logout not confirmed by IDP', null);\n\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcallback('No Response Found', null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t});\n};\n\nSAML.prototype.mapAttributes = function(attributeStatement, profile) {\n\tdebugLog(`Attribute Statement found in SAML response: ${ attributeStatement }`);\n\tconst attributes = attributeStatement.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Attribute');\n\tdebugLog(`Attributes will be processed: ${ attributes.length }`);\n\n\tif (attributes) {\n\t\tfor (let i = 0; i < attributes.length; i++) {\n\t\t\tconst values = attributes[i].getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeValue');\n\t\t\tlet value;\n\t\t\tif (values.length === 1) {\n\t\t\t\tvalue = values[0].textContent;\n\t\t\t} else {\n\t\t\t\tvalue = [];\n\t\t\t\tfor (let j = 0;j < values.length;j++) {\n\t\t\t\t\tvalue.push(values[j].textContent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst key = attributes[i].getAttribute('Name');\n\n\t\t\tdebugLog(`Name:  ${ attributes[i] }`);\n\t\t\tdebugLog(`Adding attribute from SAML response to profile: ${ key } = ${ value }`);\n\t\t\tprofile[key] = value;\n\t\t}\n\t} else {\n\t\tdebugLog('No Attributes found in SAML attribute statement.');\n\t}\n\n\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t}\n\n\tif (!profile.email && profile['urn:oid:1.2.840.113549.1.9.1']) {\n\t\tprofile.email = profile['urn:oid:1.2.840.113549.1.9.1'];\n\t}\n\n\tif (!profile.email && profile.mail) {\n\t\tprofile.email = profile.mail;\n\t}\n};\n\nSAML.prototype.validateResponse = function(samlResponse, relayState, callback) {\n\tconst self = this;\n\tconst xml = new Buffer(samlResponse, 'base64').toString('utf8');\n\t// We currently use RelayState to save SAML provider\n\tdebugLog(`Validating response with relay state: ${ xml }`);\n\n\tconst doc = new xmldom.DOMParser().parseFromString(xml, 'text/xml');\n\n\tif (doc) {\n\t\tdebugLog('Verify status');\n\t\tconst statusValidateObj = self.validateStatus(doc);\n\n\t\tif (statusValidateObj.success) {\n\t\t\tdebugLog('Status ok');\n\n\t\t\t// Verify signature\n\t\t\tdebugLog('Verify signature');\n\t\t\tif (self.options.cert && !self.validateSignature(xml, self.options.cert)) {\n\t\t\t\tdebugLog('Signature WRONG');\n\t\t\t\treturn callback(new Error('Invalid signature'), null, false);\n\t\t\t}\n\t\t\tdebugLog('Signature OK');\n\n\t\t\tconst response = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'Response')[0];\n\t\t\tif (response) {\n\t\t\t\tdebugLog('Got response');\n\n\t\t\t\tconst assertion = response.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Assertion')[0];\n\t\t\t\tif (!assertion) {\n\t\t\t\t\treturn callback(new Error('Missing SAML assertion'), null, false);\n\t\t\t\t}\n\n\t\t\t\tconst profile = {};\n\n\t\t\t\tif (response.hasAttribute('InResponseTo')) {\n\t\t\t\t\tprofile.inResponseToId = response.getAttribute('InResponseTo');\n\t\t\t\t}\n\n\t\t\t\tconst issuer = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Issuer')[0];\n\t\t\t\tif (issuer) {\n\t\t\t\t\tprofile.issuer = issuer.textContent;\n\t\t\t\t}\n\n\t\t\t\tconst subject = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'Subject')[0];\n\n\t\t\t\tif (subject) {\n\t\t\t\t\tconst nameID = subject.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'NameID')[0];\n\t\t\t\t\tif (nameID) {\n\t\t\t\t\t\tprofile.nameID = nameID.textContent;\n\n\t\t\t\t\t\tif (nameID.hasAttribute('Format')) {\n\t\t\t\t\t\t\tprofile.nameIDFormat = nameID.getAttribute('Format');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst authnStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AuthnStatement')[0];\n\n\t\t\t\tif (authnStatement) {\n\t\t\t\t\tif (authnStatement.hasAttribute('SessionIndex')) {\n\n\t\t\t\t\t\tprofile.sessionIndex = authnStatement.getAttribute('SessionIndex');\n\t\t\t\t\t\tdebugLog(`Session Index: ${ profile.sessionIndex }`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdebugLog('No Session Index Found');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdebugLog('No AuthN Statement found');\n\t\t\t\t}\n\n\t\t\t\tconst attributeStatement = assertion.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:assertion', 'AttributeStatement')[0];\n\t\t\t\tif (attributeStatement) {\n\t\t\t\t\tthis.mapAttributes(attributeStatement, profile);\n\t\t\t\t} else {\n\t\t\t\t\tdebugLog('No Attribute Statement found in SAML response.');\n\t\t\t\t}\n\n\t\t\t\tif (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n\t\t\t\t\tprofile.email = profile.nameID;\n\t\t\t\t}\n\n\t\t\t\tconst profileKeys = Object.keys(profile);\n\t\t\t\tfor (let i = 0; i < profileKeys.length; i++) {\n\t\t\t\t\tconst key = profileKeys[i];\n\n\t\t\t\t\tif (key.match(/\\./)) {\n\t\t\t\t\t\tprofile[key.replace(/\\./g, '-')] = profile[key];\n\t\t\t\t\t\tdelete profile[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdebugLog(`NameID: ${ JSON.stringify(profile) }`);\n\t\t\t\tcallback(null, profile, false);\n\t\t\t} else {\n\t\t\t\tconst logoutResponse = doc.getElementsByTagNameNS('urn:oasis:names:tc:SAML:2.0:protocol', 'LogoutResponse');\n\n\t\t\t\tif (logoutResponse) {\n\t\t\t\t\tcallback(null, null, true);\n\t\t\t\t} else {\n\t\t\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn callback(new Error(`Status is:  ${ statusValidateObj.statusCode }`), null, false);\n\t\t}\n\t}\n};\n\nlet decryptionCert;\nSAML.prototype.generateServiceProviderMetadata = function(callbackUrl) {\n\n\tif (!decryptionCert) {\n\t\tdecryptionCert = this.options.privateCert;\n\t}\n\n\tif (!this.options.callbackUrl && !callbackUrl) {\n\t\tthrow new Error(\n\t\t\t'Unable to generate service provider metadata when callbackUrl option is not set');\n\t}\n\n\tconst metadata = {\n\t\tEntityDescriptor: {\n\t\t\t'@xmlns': 'urn:oasis:names:tc:SAML:2.0:metadata',\n\t\t\t'@xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n\t\t\t'@entityID': this.options.issuer,\n\t\t\tSPSSODescriptor: {\n\t\t\t\t'@protocolSupportEnumeration': 'urn:oasis:names:tc:SAML:2.0:protocol',\n\t\t\t\tSingleLogoutService: {\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n\t\t\t\t\t'@Location': `${ Meteor.absoluteUrl() }_saml/logout/${ this.options.provider }/`,\n\t\t\t\t\t'@ResponseLocation': `${ Meteor.absoluteUrl() }_saml/logout/${ this.options.provider }/`,\n\t\t\t\t},\n\t\t\t\tNameIDFormat: this.options.identifierFormat,\n\t\t\t\tAssertionConsumerService: {\n\t\t\t\t\t'@index': '1',\n\t\t\t\t\t'@isDefault': 'true',\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n\t\t\t\t\t'@Location': callbackUrl,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n\n\tif (this.options.privateKey) {\n\t\tif (!decryptionCert) {\n\t\t\tthrow new Error(\n\t\t\t\t'Missing decryptionCert while generating metadata for decrypting service provider');\n\t\t}\n\n\t\tdecryptionCert = decryptionCert.replace(/-+BEGIN CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/-+END CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/\\r\\n/g, '\\n');\n\n\t\tmetadata.EntityDescriptor.SPSSODescriptor.KeyDescriptor = {\n\t\t\t'ds:KeyInfo': {\n\t\t\t\t'ds:X509Data': {\n\t\t\t\t\t'ds:X509Certificate': {\n\t\t\t\t\t\t'#text': decryptionCert,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tEncryptionMethod: [\n\t\t\t\t// this should be the set that the xmlenc library supports\n\t\t\t\t{\n\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes256-cbc',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes128-cbc',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc',\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t}\n\n\treturn xmlbuilder.create(metadata).end({\n\t\tpretty: true,\n\t\tindent: '  ',\n\t\tnewline: '\\n',\n\t});\n};\n","const logger = new Logger('steffo:meteor-accounts-saml', {\n\tmethods: {\n\t\tupdated: {\n\t\t\ttype: 'info',\n\t\t},\n\t},\n});\n\nRocketChat.settings.addGroup('SAML');\n\nMeteor.methods({\n\taddSamlService(name) {\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }`, false, {\n\t\t\ttype: 'boolean',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Enable',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_provider`, 'provider-name', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Provider',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_entry_point`, 'https://example.com/simplesaml/saml2/idp/SSOService.php', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Entry_point',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_idp_slo_redirect_url`, 'https://example.com/simplesaml/saml2/idp/SingleLogoutService.php', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_IDP_SLO_Redirect_URL',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_issuer`, 'https://your-rocket-chat/_saml/metadata/provider-name', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Issuer',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_cert`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Cert',\n\t\t\tmultiline: true,\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_public_cert`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\tmultiline: true,\n\t\t\ti18nLabel: 'SAML_Custom_Public_Cert',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_private_key`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\tmultiline: true,\n\t\t\ti18nLabel: 'SAML_Custom_Private_Key',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_label_text`, '', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Text',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_label_color`, '#FFFFFF', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Label_Color',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_button_color`, '#13679A', {\n\t\t\ttype: 'string',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'Accounts_OAuth_Custom_Button_Color',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_generate_username`, false, {\n\t\t\ttype: 'boolean',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Generate_Username',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_debug`, false, {\n\t\t\ttype: 'boolean',\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Debug',\n\t\t});\n\t\tRocketChat.settings.add(`SAML_Custom_${ name }_logout_behaviour`, 'SAML', {\n\t\t\ttype: 'select',\n\t\t\tvalues: [\n\t\t\t\t{ key: 'SAML', i18nLabel: 'SAML_Custom_Logout_Behaviour_Terminate_SAML_Session' },\n\t\t\t\t{ key: 'Local', i18nLabel: 'SAML_Custom_Logout_Behaviour_End_Only_RocketChat' },\n\t\t\t],\n\t\t\tgroup: 'SAML',\n\t\t\tsection: name,\n\t\t\ti18nLabel: 'SAML_Custom_Logout_Behaviour',\n\t\t});\n\t},\n});\n\nconst getSamlConfigs = function(service) {\n\treturn {\n\t\tbuttonLabelText: RocketChat.settings.get(`${ service.key }_button_label_text`),\n\t\tbuttonLabelColor: RocketChat.settings.get(`${ service.key }_button_label_color`),\n\t\tbuttonColor: RocketChat.settings.get(`${ service.key }_button_color`),\n\t\tclientConfig: {\n\t\t\tprovider: RocketChat.settings.get(`${ service.key }_provider`),\n\t\t},\n\t\tentryPoint: RocketChat.settings.get(`${ service.key }_entry_point`),\n\t\tidpSLORedirectURL: RocketChat.settings.get(`${ service.key }_idp_slo_redirect_url`),\n\t\tgenerateUsername: RocketChat.settings.get(`${ service.key }_generate_username`),\n\t\tdebug: RocketChat.settings.get(`${ service.key }_debug`),\n\t\tissuer: RocketChat.settings.get(`${ service.key }_issuer`),\n\t\tlogoutBehaviour: RocketChat.settings.get(`${ service.key }_logout_behaviour`),\n\t\tsecret: {\n\t\t\tprivateKey: RocketChat.settings.get(`${ service.key }_private_key`),\n\t\t\tpublicCert: RocketChat.settings.get(`${ service.key }_public_cert`),\n\t\t\tcert: RocketChat.settings.get(`${ service.key }_cert`),\n\t\t},\n\t};\n};\n\nconst debounce = (fn, delay) => {\n\tlet timer = null;\n\treturn () => {\n\t\tif (timer != null) {\n\t\t\tMeteor.clearTimeout(timer);\n\t\t}\n\t\treturn timer = Meteor.setTimeout(fn, delay);\n\t};\n};\nconst serviceName = 'saml';\n\nconst configureSamlService = function(samlConfigs) {\n\tlet privateCert = false;\n\tlet privateKey = false;\n\tif (samlConfigs.secret.privateKey && samlConfigs.secret.publicCert) {\n\t\tprivateKey = samlConfigs.secret.privateKey;\n\t\tprivateCert = samlConfigs.secret.publicCert;\n\t} else if (samlConfigs.secret.privateKey || samlConfigs.secret.publicCert) {\n\t\tlogger.error('You must specify both cert and key files.');\n\t}\n\t// TODO: the function configureSamlService is called many times and Accounts.saml.settings.generateUsername keeps just the last value\n\tAccounts.saml.settings.generateUsername = samlConfigs.generateUsername;\n\tAccounts.saml.settings.debug = samlConfigs.debug;\n\n\treturn {\n\t\tprovider: samlConfigs.clientConfig.provider,\n\t\tentryPoint: samlConfigs.entryPoint,\n\t\tidpSLORedirectURL: samlConfigs.idpSLORedirectURL,\n\t\tissuer: samlConfigs.issuer,\n\t\tcert: samlConfigs.secret.cert,\n\t\tprivateCert,\n\t\tprivateKey,\n\t};\n};\n\nconst updateServices = debounce(() => {\n\tconst services = RocketChat.settings.get(/^(SAML_Custom_)[a-z]+$/i);\n\tAccounts.saml.settings.providers = services.map((service) => {\n\t\tif (service.value === true) {\n\t\t\tconst samlConfigs = getSamlConfigs(service);\n\t\t\tlogger.updated(service.key);\n\t\t\tServiceConfiguration.configurations.upsert({\n\t\t\t\tservice: serviceName.toLowerCase(),\n\t\t\t}, {\n\t\t\t\t$set: samlConfigs,\n\t\t\t});\n\t\t\treturn configureSamlService(samlConfigs);\n\t\t}\n\t\treturn ServiceConfiguration.configurations.remove({\n\t\t\tservice: serviceName.toLowerCase(),\n\t\t});\n\t}).filter((e) => e);\n}, 2000);\n\n\nRocketChat.settings.get(/^SAML_.+/, updateServices);\n\nMeteor.startup(() => Meteor.call('addSamlService', 'Default'));\n\nexport {\n\tupdateServices,\n\tconfigureSamlService,\n\tgetSamlConfigs,\n\tdebounce,\n\tlogger,\n};\n"]}