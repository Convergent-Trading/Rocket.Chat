{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:importer-slack-users/info.js","meteor://ðŸ’»app/packages/rocketchat:importer-slack-users/server/importer.js","meteor://ðŸ’»app/packages/rocketchat:importer-slack-users/server/adder.js"],"names":["module","export","SlackUsersImporterInfo","ImporterInfo","watch","require","v","constructor","text","href","SlackUsersImporter","Base","ProgressStep","Selection","SelectionUser","info","csvParser","userMap","Map","admins","prepare","dataURI","sentContentType","fileName","updateProgress","PREPARING_USERS","uriResult","RocketChatFile","dataURIParse","buf","Buffer","image","parsed","toString","forEach","user","index","id","Random","username","email","isBot","isDeleted","push","set","userArray","Array","from","values","usersId","collection","insert","import","importRecord","_id","importer","name","type","users","findOne","updateRecord","size","addCountToTotal","logger","error","ERROR","getProgress","USER_SELECTION","startImport","importSelection","started","Date","now","u","get","user_id","do_import","update","$set","startedByUserId","Meteor","userId","defer","IMPORTING_USERS","runAsUser","existantUser","RocketChat","models","Users","findOneByEmailAddress","findOneByUsername","rocketId","$addToSet","importIds","setEmail","setEmailVerified","Accounts","createUser","password","toUpperCase","console","warn","call","joinDefaultChannelsSilenced","setName","includes","addCountCompleted","FINISHING","DONE","e","timeTook","log","Importers","add"],"mappings":"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","file":"/packages/rocketchat_importer-slack-users.js","sourcesContent":["import { ImporterInfo } from 'meteor/rocketchat:importer';\n\nexport class SlackUsersImporterInfo extends ImporterInfo {\n\tconstructor() {\n\t\tsuper('slack-users', 'Slack_Users', 'text/csv', [{\n\t\t\ttext: 'Importer_Slack_Users_CSV_Information',\n\t\t\thref: 'https://rocket.chat/docs/administrator-guides/import/slack/users',\n\t\t}]);\n\t}\n}\n","import {\n\tBase,\n\tProgressStep,\n\tSelection,\n\tSelectionUser,\n} from 'meteor/rocketchat:importer';\n\nexport class SlackUsersImporter extends Base {\n\tconstructor(info) {\n\t\tsuper(info);\n\n\t\tthis.csvParser = require('csv-parse/lib/sync');\n\t\tthis.userMap = new Map();\n\t\tthis.admins = []; // Array of ids of the users which are admins\n\t}\n\n\tprepare(dataURI, sentContentType, fileName) {\n\t\tsuper.prepare(dataURI, sentContentType, fileName, true);\n\n\t\tsuper.updateProgress(ProgressStep.PREPARING_USERS);\n\t\tconst uriResult = RocketChatFile.dataURIParse(dataURI);\n\t\tconst buf = new Buffer(uriResult.image, 'base64');\n\t\tconst parsed = this.csvParser(buf.toString());\n\n\t\tparsed.forEach((user, index) => {\n\t\t\t// Ignore the first column\n\t\t\tif (index === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst id = Random.id();\n\t\t\tconst username = user[0];\n\t\t\tconst email = user[1];\n\t\t\tlet isBot = false;\n\t\t\tlet isDeleted = false;\n\n\t\t\tswitch (user[2]) {\n\t\t\t\tcase 'Admin':\n\t\t\t\t\tthis.admins.push(id);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bot':\n\t\t\t\t\tisBot = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Deactivated':\n\t\t\t\t\tisDeleted = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.userMap.set(id, new SelectionUser(id, username, email, isDeleted, isBot, true));\n\t\t});\n\n\t\tconst userArray = Array.from(this.userMap.values());\n\n\t\tconst usersId = this.collection.insert({ import: this.importRecord._id, importer: this.name, type: 'users', users: userArray });\n\t\tthis.users = this.collection.findOne(usersId);\n\t\tsuper.updateRecord({ 'count.users': this.userMap.size });\n\t\tsuper.addCountToTotal(this.userMap.size);\n\n\t\tif (this.userMap.size === 0) {\n\t\t\tthis.logger.error('No users found in the import file.');\n\t\t\tsuper.updateProgress(ProgressStep.ERROR);\n\t\t\treturn super.getProgress();\n\t\t}\n\n\t\tsuper.updateProgress(ProgressStep.USER_SELECTION);\n\t\treturn new Selection(this.name, userArray, [], 0);\n\t}\n\n\tstartImport(importSelection) {\n\t\tsuper.startImport(importSelection);\n\t\tconst started = Date.now();\n\n\t\tfor (const user of importSelection.users) {\n\t\t\tconst u = this.userMap.get(user.user_id);\n\t\t\tu.do_import = user.do_import;\n\n\t\t\tthis.userMap.set(user.user_id, u);\n\t\t}\n\t\tthis.collection.update({ _id: this.users._id }, { $set: { users: Array.from(this.userMap.values()) } });\n\n\t\tconst startedByUserId = Meteor.userId();\n\t\tMeteor.defer(() => {\n\t\t\tsuper.updateProgress(ProgressStep.IMPORTING_USERS);\n\n\t\t\ttry {\n\t\t\t\tfor (const u of this.users.users) {\n\t\t\t\t\tif (!u.do_import) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tMeteor.runAsUser(startedByUserId, () => {\n\t\t\t\t\t\tconst existantUser = RocketChat.models.Users.findOneByEmailAddress(u.email) || RocketChat.models.Users.findOneByUsername(u.username);\n\n\t\t\t\t\t\tlet userId;\n\t\t\t\t\t\tif (existantUser) {\n\t\t\t\t\t\t\t// since we have an existing user, let's try a few things\n\t\t\t\t\t\t\tuserId = existantUser._id;\n\t\t\t\t\t\t\tu.rocketId = existantUser._id;\n\t\t\t\t\t\t\tRocketChat.models.Users.update({ _id: u.rocketId }, { $addToSet: { importIds: u.id } });\n\n\t\t\t\t\t\t\tRocketChat.models.Users.setEmail(existantUser._id, u.email);\n\t\t\t\t\t\t\tRocketChat.models.Users.setEmailVerified(existantUser._id, u.email);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuserId = Accounts.createUser({ username: u.username + Random.id(), password: Date.now() + u.name + u.email.toUpperCase() });\n\n\t\t\t\t\t\t\tif (!userId) {\n\t\t\t\t\t\t\t\tconsole.warn('An error happened while creating a user.');\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tMeteor.runAsUser(userId, () => {\n\t\t\t\t\t\t\t\tMeteor.call('setUsername', u.username, { joinDefaultChannelsSilenced: true });\n\t\t\t\t\t\t\t\tRocketChat.models.Users.setName(userId, u.name);\n\t\t\t\t\t\t\t\tRocketChat.models.Users.update({ _id: userId }, { $addToSet: { importIds: u.id } });\n\t\t\t\t\t\t\t\tRocketChat.models.Users.setEmail(userId, u.email);\n\t\t\t\t\t\t\t\tRocketChat.models.Users.setEmailVerified(userId, u.email);\n\t\t\t\t\t\t\t\tu.rocketId = userId;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this.admins.includes(u.user_id)) {\n\t\t\t\t\t\t\tMeteor.call('setAdminStatus', userId, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsuper.addCountCompleted(1);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsuper.updateProgress(ProgressStep.FINISHING);\n\t\t\t\tsuper.updateProgress(ProgressStep.DONE);\n\t\t\t} catch (e) {\n\t\t\t\tthis.logger.error(e);\n\t\t\t\tsuper.updateProgress(ProgressStep.ERROR);\n\t\t\t}\n\n\t\t\tconst timeTook = Date.now() - started;\n\t\t\tthis.logger.log(`Slack Users Import took ${ timeTook } milliseconds.`);\n\t\t});\n\n\t\treturn super.getProgress();\n\t}\n}\n","import { Importers } from 'meteor/rocketchat:importer';\nimport { SlackUsersImporterInfo } from '../info';\nimport { SlackUsersImporter } from './importer';\n\nImporters.add(new SlackUsersImporterInfo(), SlackUsersImporter);\n"]}